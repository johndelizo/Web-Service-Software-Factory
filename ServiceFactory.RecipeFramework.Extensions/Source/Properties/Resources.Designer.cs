//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.ServiceFactory.RecipeFramework.Extensions.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.ServiceFactory.RecipeFramework.Extensions.Properties.Resource" +
                            "s", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No assemblies were loaded from folder: {0}.
        /// </summary>
        internal static string AssembliesNotLoaded {
            get {
                return ResourceManager.GetString("AssembliesNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly folder path could not be resolved. The model extenders should be placed in the sample folder as the tool binaries to be discovered and loaded..
        /// </summary>
        internal static string AssemblyFolderNotFound {
            get {
                return ResourceManager.GetString("AssemblyFolderNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find assembly {0}. Make sure it is installed in the guidance package Lib folder..
        /// </summary>
        internal static string AssemblyNotFound {
            get {
                return ResourceManager.GetString("AssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate guidance package install folder..
        /// </summary>
        internal static string ConfigurationServiceGuidancePackageNotFound {
            get {
                return ResourceManager.GetString("ConfigurationServiceGuidancePackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find Visual Studio registry hive root..
        /// </summary>
        internal static string HiveRootNotFound {
            get {
                return ResourceManager.GetString("HiveRootNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter type {0} does not implement the required interface {1}..
        /// </summary>
        internal static string InvaInvalidTypeFilter {
            get {
                return ResourceManager.GetString("InvaInvalidTypeFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Type..
        /// </summary>
        internal static string InvalidTypeError {
            get {
                return ResourceManager.GetString("InvalidTypeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project mapping already exists..
        /// </summary>
        internal static string ProjectMappingAlreadyExists {
            get {
                return ResourceManager.GetString("ProjectMappingAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder where the Project mapping resides must be named &apos;{0}&apos;..
        /// </summary>
        internal static string ProjectMappingFileNotFound {
            get {
                return ResourceManager.GetString("ProjectMappingFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project mapping table already exists..
        /// </summary>
        internal static string ProjectMappingTableAlreadyExists {
            get {
                return ResourceManager.GetString("ProjectMappingTableAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project mapping table not found..
        /// </summary>
        internal static string ProjectMappingTableNotFound {
            get {
                return ResourceManager.GetString("ProjectMappingTableNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project not found..
        /// </summary>
        internal static string ProjectNotFound {
            get {
                return ResourceManager.GetString("ProjectNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to solution types.
        /// </summary>
        internal static string PublicNonSystemTypeFilter_Description {
            get {
                return ResourceManager.GetString("PublicNonSystemTypeFilter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public and primitive types..
        /// </summary>
        internal static string PublicPrivateTypesFilter_Description {
            get {
                return ResourceManager.GetString("PublicPrivateTypesFilter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public types.
        /// </summary>
        internal static string PublicTypesFilter_Description {
            get {
                return ResourceManager.GetString("PublicTypesFilter_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type {0} is not public..
        /// </summary>
        internal static string PublicTypesFilter_Error {
            get {
                return ResourceManager.GetString("PublicTypesFilter_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access closed registry key..
        /// </summary>
        internal static string RegistryKeyAccessorClosedKey {
            get {
                return ResourceManager.GetString("RegistryKeyAccessorClosedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to read name {0} in registry key {1}..
        /// </summary>
        internal static string RegistryKeyAccessorFailed {
            get {
                return ResourceManager.GetString("RegistryKeyAccessorFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ServiceProvider is null..
        /// </summary>
        internal static string ServiceProviderIsNull {
            get {
                return ResourceManager.GetString("ServiceProviderIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument {0} value cannot be an empty string..
        /// </summary>
        internal static string StringCannotBeEmpty {
            get {
                return ResourceManager.GetString("StringCannotBeEmpty", resourceCulture);
            }
        }
    }
}
