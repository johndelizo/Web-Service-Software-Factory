//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Practices.VisualStudio.Helper.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Practices.VisualStudio.Helper.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create project item with an empty name.
        /// </summary>
        internal static string CannotCreateItemWithEmptyName {
            get {
                return ResourceManager.GetString("CannotCreateItemWithEmptyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument &apos;{0}&apos; cannot be empty.
        /// </summary>
        internal static string General_ArgumentEmpty {
            get {
                return ResourceManager.GetString("General_ArgumentEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid COM Service Provider.
        /// </summary>
        internal static string InvalidComServiceProvider {
            get {
                return ResourceManager.GetString("InvalidComServiceProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid name &apos;{0}&apos; for a file.
        /// </summary>
        internal static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The project name &apos;{0}&apos; was not found in the solution..
        /// </summary>
        internal static string InvalidProjectUniqueName {
            get {
                return ResourceManager.GetString("InvalidProjectUniqueName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project with GUID &apos;{0}&apos; does not exist.
        /// </summary>
        internal static string ProjectDoesNotExist {
            get {
                return ResourceManager.GetString("ProjectDoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property &apos;{0}&apos; was not found in the project &apos;{1}&apos;.
        /// </summary>
        internal static string PropertyNameNotFound {
            get {
                return ResourceManager.GetString("PropertyNameNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly name &apos;{0}&apos;.
        /// </summary>
        internal static string ReflectionHelper_InvalidAssemblyName {
            get {
                return ResourceManager.GetString("ReflectionHelper_InvalidAssemblyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid qualified name &apos;{0}&apos;.
        /// </summary>
        internal static string ReflectionHelper_InvalidQName {
            get {
                return ResourceManager.GetString("ReflectionHelper_InvalidQName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current project does not support service references. To enable Windows Communication Foundation support, change the target version of the Microsoft .NET Framework to 3.5 or higher..
        /// </summary>
        internal static string ServiceReferenceSupported {
            get {
                return ResourceManager.GetString("ServiceReferenceSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String cannot be empty.
        /// </summary>
        internal static string StringCannotBeEmpty {
            get {
                return ResourceManager.GetString("StringCannotBeEmpty", resourceCulture);
            }
        }
    }
}
