<#@ Template Language="C#" Inherits="Microsoft.Practices.Modeling.CodeGeneration.Strategies.TextTemplating.ModelingTextTransformation" #>
<#@ Import Namespace="System" #>
<#@ Import Namespace="System.Collections.Generic" #>
<#@ Import Namespace="System.Collections.ObjectModel" #>
<#@ Import Namespace="System.Xml.Serialization" #>
<#@ Import Namespace="System.Runtime.Serialization" #>
<#@ Import Namespace="Microsoft.Practices.ServiceFactory.DataContracts" #>
<#@ Import Namespace="Microsoft.Practices.ServiceFactory.Extenders.DataContract.Wcf" #>
<#@ Import Namespace="Microsoft.VisualStudio.Modeling" #>
<#@ ModelInjector processor="ModelInjectorDirectiveProcessor" #>
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports WcfSerialization = System.Runtime.Serialization

Namespace <#=CurrentExtender.ArtifactLink.Namespace#>
	''' <summary>
	''' Data Contract Enum - <#= CurrentElement.Name #>
	''' </summary>
	<WcfSerialization.DataContract(Namespace := "<#= CurrentElement.Namespace #>", Name := "<#= CurrentElement.Name #>")> _
	Public Enum <#= CurrentElement.Name #> 
<# 
		int index = 0;
		foreach(EnumNamedValue member in CurrentElement.EnumNamedValues)
		{ #>
		
		<WcfSerialization.EnumMember<#= GetEnumMemberAttributes(member) #>> _
		<#="[" + member.Name + "]"#> = <#=index++#>		
<#	    } // closes foreach #>
	End Enum
End Namespace

<#+

private string GetEnumMemberAttributes(EnumNamedValue enumElement) 
{
	string attributeLine = string.Empty;
	if (!string.IsNullOrEmpty(enumElement.Value)) 
	{
		attributeLine = "(Value:=\"" + enumElement.Value + "\")";
	}
	
	return attributeLine;
}

#>

