//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using Microsoft.VisualStudio.Modeling;
using Microsoft.VisualStudio.Modeling.Integration;

namespace Microsoft.Practices.ServiceFactory.ServiceContracts
{	/// <summary>
	/// Customised serialization behaviour: add in a custom property serializer to 
	/// serialize ModelBusReference properties.
	/// </summary>
	partial class ServiceContractDslSerializationBehavior
	{
		private List<DomainXmlTypeSerializerDirectoryEntry> serializers;

		public override ReadOnlyCollection<DomainXmlTypeSerializerDirectoryEntry> AllPropertySerializers
		{
			get
			{
				if (serializers == null)
				{
					serializers = new List<DomainXmlTypeSerializerDirectoryEntry>();
					serializers.AddRange(base.AllPropertySerializers);
					serializers.Add(new DomainXmlTypeSerializerDirectoryEntry(typeof(ModelBusReference), typeof(DataContractModelBusReferencePropertySerializer)));
				}

				return serializers.AsReadOnly(); ;
			}
		}
	}	

	// partial implementation of the SerializationHelper
	partial class ServiceContractDslSerializationHelper
	{
		/// <summary>
		/// Initialize the serialization context on load / save
		/// </summary>
		/// <remarks>We need to supply a model bus for ModelBusReference deserialization to work</remarks>
		protected override void InitializeSerializationContext(Partition partition, SerializationContext serializationContext, bool isLoading)
		{
			Debug.Assert(partition != null, "partition should not be null");
			Debug.Assert(serializationContext != null, "serializationContext should not be null");

			IModelBus modelbus = partition.Store.GetService(typeof(SModelBus)) as IModelBus;
			serializationContext[Microsoft.VisualStudio.Modeling.Integration.ModelBusReferencePropertySerializer.ModelBusLoadContextKey] = modelbus;
		}	
	}	
}